[General]
############### Network configuration ##################
#network = simu5g.simulations.NR.Simple5Gsim.Simple5GScenario 
network = HelloWorldSim
sim-time-limit = 20s 
warmup-period = 1s 
seed-set = ${repetition} 

output-scalar-file-append = false
**.routingRecorder.enabled = false
 
############### Statistics ##################
#output-scalar-file-append = false
##**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
##**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP
#**.routingRecorder.enabled = false 
#
##**.sctp.**.vector-recording = true
##**.servingCell*.vector-recording = true
#**.ue[*]*.vector-recording = true 
##**.upf.scalar-recording = true
#**.upf*.vector-recording = true
#**.binder*.vector-recording = true
#**.servingCell*.vector-recording = true
#**.carrierAggregation*.vector-recording = true
##**.carrierAggregation.vector-recording = true
##**.logLevel = INFO  # or DEBUG for more detailed logs
#
#**.scalar-recording = false
#**.vector-recording = false
#
## include itervars in the output file names 
#output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca 
#output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec 

############### Statistics ##################

**.server*.vector-recording = false


#**.ue[*]*.vector-recording = true 

#**.scalar-recording = false
#**.vector-recording = false
**.gnb*.vector-recording = false

output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec
  
# General parameters 
**.amcType = "NRAmc" 
**.targetBler = 0.01 
**.blerShift = 5   
*.configurator.config = xmldoc("CaseID/config/demo.xml") 

# Floorplan definition 
**.mobility.constraintAreaMaxX = 1000m 
**.mobility.constraintAreaMaxY = 1000m 
**.mobility.constraintAreaMinX = 0m 
**.mobility.constraintAreaMinY = 0m 
**.mobility.constraintAreaMinZ = 0m 
**.mobility.constraintAreaMaxZ = 0m 
**.mobility.initFromDisplayString = false 
# --------------------------------------------------------# 
  

# --------------------------------------------------------# 
# Config "Single-UE" 
# 
# Simple scenario with one UE attached to one gNB. A remote  
# server sends 800 kbps CBR traffic to the UE 
# 
[Config Single-UE]

# gNodeB position 
*.gnb.mobility.initialX = 500m 
*.gnb.mobility.initialY = 500m 

# UE configuration 
*.numUe = 1 

# UE position (400m far from the gNB)

## static UE
#*.ue[*].mobility.initialX = 500m 
#*.ue[*].mobility.initialY = 900m

## mobile UE
*.ue[*].mobility.typename = "LinearMobility" 
*.ue[*].mobility.initialX = uniform(0m,1000m)
*.ue[*].mobility.initialY = uniform(250m,750m)
*.ue[*].mobility.speed = uniform(3mps,13.89mps) 


# connect the UE's NIC (NR side) to the corresponding serving gNB 
*.ue[*].macCellId = 0 
*.ue[*].masterId = 0 
*.ue[*].nrMacCellId = 1 
*.ue[*].nrMasterId = 1 
 
# Application Setup 
*.ue[*].numApps = 1 
*.server.numApps = 1 
 
*.ue[*].app[*].typename = "CbrReceiver" 
*.ue[*].app[*].localPort = 1000 
 
*.server.app[*].typename = "CbrSender"   
*.server.app[*].PacketSize = 1000      # send 800 Kb/s 
*.server.app[*].sampling_time = 0.01s 
*.server.app[*].destAddress = "ue["+string(ancestorIndex(0))+"]" # obtain the address of the client by reading its index in the array of Apps 
*.server.app[*].destPort = 1000  
*.server.app[*].localPort = 3088+ancestorIndex(0)  
*.server.app[*].startTime = uniform(0.01s,0.05s) 
# --------------------------------------------------------# 

[Config Multiple-UEs]
extends = Single-UE 

# variable number of UEs 
*.numUe = ${numUes=1,5,10,15,20} 

# UEs position
*.ue[*].mobility.typename = "LinearMobility" 
*.ue[*].mobility.initialX = uniform(0m,1000m)
*.ue[*].mobility.initialY = uniform(250m,750m)
*.ue[*].mobility.speed = uniform(20mps,100mps) 

# the server has one app per client 
*.server.numApps = ${numUes} 
