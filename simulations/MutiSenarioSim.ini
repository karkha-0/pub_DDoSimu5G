[General]
description = "Base configuration, do not run this config!"
############### Simualtion configuration ##################
parsim-debug = false
sim-time-limit = 60s #43200s	 # 12 hrs  
warmup-period = 1s 
repeat = 10
seed-set = ${repetition} 
ned-package-exclusions = inet.common.selfdoc;
#image-path = ../image/background

 
############### Network configuration ##################
*.configurator.config = xmldoc("CaseID/config/demo.xml") 
# --------------------------------------------------------# 

############### Statistics ##################
#output-scalar-file-append = false
**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false
#**.routingRecorder.enabled = false


#record-eventlog = true
#**.ueConnectedSignal*.vector-recording = true

**.servingCell*.vector-recording = true
**.servedUE*.vector-recording = true
**.servedUELTH*.vector-recording = true
**.testMsg*.vector-recording = true
**.simNodeIds*.vector-recording = true


#**.scalar-recording = false
#**.vector-recording = false

# include itervars in the output file names 
output-scalar-file = ../${resultdir}/${configname}/${iterationvars}-repit-${repetition}.sca 
output-vector-file = ../${resultdir}/${configname}/${iterationvars}-repit-${repetition}.vec 
# --------------------------------------------------------# 

# --------------------------------------------------------# 
# Config "Single-Cell" 
# 
# 
# 
[Config Single-Cell]

################ NED config setting #############
#network = simu5G.simulations.NR.simple5Gsim.networks.MultiCell
#network = networks.SingleCell
network = SingleCell # This is because i added the ned files needed through the project properties
description = "Base configuration, do not run this config!"
# --------------------------------------------------------#

############### General parameters  ##################
**.amcType = "NRAmc" 
**.targetBler = 0.01 
**.blerShift = 5   


# Floorplan definition 
**.mobility.constraintAreaMaxX = 2000m 
**.mobility.constraintAreaMaxY = 2000m 
**.mobility.constraintAreaMinX = 0m 
**.mobility.constraintAreaMinY = 0m 
**.mobility.constraintAreaMinZ = 0m 
**.mobility.constraintAreaMaxZ = 0m 
**.mobility.initFromDisplayString = false 
# --------------------------------------------------------# 
  
# --------------------------------------------------------# 
# Config "Mutliple-Cell" 
# 
# 
# 
[Config Mutliple-Cell]
################ NED config setting #############
#network = networks.MultiCell
network = MultiCell # This is because i added the ned files needed through the project properties
description = "Base configuration, do not run this config!"
# --------------------------------------------------------#

############### General PHY parameters ##############
**.downlink_interference = true
**.uplink_interference = true
**.ueTxPower = 26
**.eNodeBTxPower = 46
**.targetBler = 0.01
**.blerShift = 5  
**.fbPeriod = 40   # reports CQI every 40ms

############# Floorplan parameters ################
**.mobility.constraintAreaMaxX = 2000m
**.mobility.constraintAreaMaxY = 2000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 250m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### CA configuration ################# 
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=0}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numRbs=50}

*.gnb*.cellularNic.numCarriers = 1
*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0

############### BS position #################
#*.gnb1.mobility.initialX = 250m
#*.gnb1.mobility.initialY = 500m
#*.gnb2.mobility.initialX = 500m
#*.gnb2.mobility.initialY = 500m
#*.gnb3.mobility.initialX = 750m
#*.gnb3.mobility.initialY = 500m
#
#*.gnb4.mobility.initialX = 250m
#*.gnb4.mobility.initialY = 750m
#*.gnb5.mobility.initialX = 500m
#*.gnb5.mobility.initialY = 750m
#*.gnb6.mobility.initialX = 750m
#*.gnb6.mobility.initialY = 750m
##
#*.gnb7.mobility.initialX = 250m
#*.gnb7.mobility.initialY = 1000m
#*.gnb8.mobility.initialX = 500m
#*.gnb8.mobility.initialY = 1000m
#*.gnb9.mobility.initialX = 750m
#*.gnb9.mobility.initialY = 1000m
##
#*.gnb10.mobility.initialX = 1000m
#*.gnb10.mobility.initialY = 500m

*.gnb1.mobility.initialX = 300m
*.gnb1.mobility.initialY = 300m
*.gnb2.mobility.initialX = 900m
*.gnb2.mobility.initialY = 300m
*.gnb3.mobility.initialX = 1500m
*.gnb3.mobility.initialY = 300m
*.gnb4.mobility.initialX = 300m
*.gnb4.mobility.initialY = 900m
*.gnb5.mobility.initialX = 900m
*.gnb5.mobility.initialY = 900m
*.gnb6.mobility.initialX = 1500m
*.gnb6.mobility.initialY = 900m
*.gnb7.mobility.initialX = 300m
*.gnb7.mobility.initialY = 1500m
*.gnb8.mobility.initialX = 900m
*.gnb8.mobility.initialY = 1500m
*.gnb9.mobility.initialX = 1500m
*.gnb9.mobility.initialY = 1500m
#*.gnb10.mobility.initialX = 1700m
#*.gnb10.mobility.initialY = 1000m


############### X2 configuration #################
*.gnb*.numX2Apps = 8                                        # one x2App per peering node
*.gnb*.x2App[*].server.localPort = 5000 + ancestorIndex(1)  # Server ports (x2App[0]=5000, x2App[1]=5001, ...)

*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0"
*.gnb1.x2App[1].client.connectAddress = "gnb3%x2ppp0"
*.gnb1.x2App[2].client.connectAddress = "gnb4%x2ppp0"
*.gnb1.x2App[3].client.connectAddress = "gnb5%x2ppp0"
*.gnb1.x2App[4].client.connectAddress = "gnb6%x2ppp0"
*.gnb1.x2App[5].client.connectAddress = "gnb7%x2ppp0"
*.gnb1.x2App[6].client.connectAddress = "gnb8%x2ppp0"
*.gnb1.x2App[7].client.connectAddress = "gnb9%x2ppp0"
#*.gnb1.x2App[8].client.connectAddress = "gnb10%x2ppp0"

*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb2.x2App[1].client.connectAddress = "gnb3%x2ppp1"
*.gnb2.x2App[2].client.connectAddress = "gnb4%x2ppp1"
*.gnb2.x2App[3].client.connectAddress = "gnb5%x2ppp1"
*.gnb2.x2App[4].client.connectAddress = "gnb6%x2ppp1"
*.gnb2.x2App[5].client.connectAddress = "gnb7%x2ppp1"
*.gnb2.x2App[6].client.connectAddress = "gnb8%x2ppp1"
*.gnb2.x2App[7].client.connectAddress = "gnb9%x2ppp1"
#*.gnb2.x2App[8].client.connectAddress = "gnb10%x2ppp1"

*.gnb3.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb3.x2App[1].client.connectAddress = "gnb2%x2ppp1"
*.gnb3.x2App[2].client.connectAddress = "gnb4%x2ppp2"
*.gnb3.x2App[3].client.connectAddress = "gnb5%x2ppp2"
*.gnb3.x2App[4].client.connectAddress = "gnb6%x2ppp2"
*.gnb3.x2App[5].client.connectAddress = "gnb7%x2ppp2"
*.gnb3.x2App[6].client.connectAddress = "gnb8%x2ppp2"
*.gnb3.x2App[7].client.connectAddress = "gnb9%x2ppp2"
#*.gnb3.x2App[8].client.connectAddress = "gnb10%x2ppp2"

*.gnb4.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb4.x2App[1].client.connectAddress = "gnb2%x2ppp1"
*.gnb4.x2App[2].client.connectAddress = "gnb3%x2ppp2"
*.gnb4.x2App[3].client.connectAddress = "gnb5%x2ppp3"
*.gnb4.x2App[4].client.connectAddress = "gnb6%x2ppp3"
*.gnb4.x2App[5].client.connectAddress = "gnb7%x2ppp3"
*.gnb4.x2App[6].client.connectAddress = "gnb8%x2ppp3"
*.gnb4.x2App[7].client.connectAddress = "gnb9%x2ppp3"
#*.gnb4.x2App[8].client.connectAddress = "gnb10%x2ppp3"

*.gnb5.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb5.x2App[1].client.connectAddress = "gnb2%x2ppp1"
*.gnb5.x2App[2].client.connectAddress = "gnb3%x2ppp2"
*.gnb5.x2App[3].client.connectAddress = "gnb4%x2ppp3"
*.gnb5.x2App[4].client.connectAddress = "gnb6%x2ppp4"
*.gnb5.x2App[5].client.connectAddress = "gnb7%x2ppp4"
*.gnb5.x2App[6].client.connectAddress = "gnb8%x2ppp4"
*.gnb5.x2App[7].client.connectAddress = "gnb9%x2ppp4"
#*.gnb5.x2App[8].client.connectAddress = "gnb10%x2ppp4"

*.gnb6.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb6.x2App[1].client.connectAddress = "gnb2%x2ppp1"
*.gnb6.x2App[2].client.connectAddress = "gnb3%x2ppp2"	
*.gnb6.x2App[3].client.connectAddress = "gnb4%x2ppp3"
*.gnb6.x2App[4].client.connectAddress = "gnb5%x2ppp4"
*.gnb6.x2App[5].client.connectAddress = "gnb7%x2ppp5"
*.gnb6.x2App[6].client.connectAddress = "gnb8%x2ppp5"
*.gnb6.x2App[7].client.connectAddress = "gnb9%x2ppp5"
#*.gnb6.x2App[8].client.connectAddress = "gnb10%x2ppp5"

*.gnb7.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb7.x2App[1].client.connectAddress = "gnb2%x2ppp1"
*.gnb7.x2App[2].client.connectAddress = "gnb3%x2ppp2"
*.gnb7.x2App[3].client.connectAddress = "gnb4%x2ppp3"
*.gnb7.x2App[4].client.connectAddress = "gnb5%x2ppp4"
*.gnb7.x2App[5].client.connectAddress = "gnb6%x2ppp5"
*.gnb7.x2App[6].client.connectAddress = "gnb8%x2ppp6"
*.gnb7.x2App[7].client.connectAddress = "gnb9%x2ppp6"
#*.gnb7.x2App[8].client.connectAddress = "gnb10%x2ppp6"

*.gnb8.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb8.x2App[1].client.connectAddress = "gnb2%x2ppp1"
*.gnb8.x2App[2].client.connectAddress = "gnb3%x2ppp2"
*.gnb8.x2App[3].client.connectAddress = "gnb4%x2ppp3"
*.gnb8.x2App[4].client.connectAddress = "gnb5%x2ppp4"
*.gnb8.x2App[5].client.connectAddress = "gnb6%x2ppp5"
*.gnb8.x2App[6].client.connectAddress = "gnb7%x2ppp6"
*.gnb8.x2App[7].client.connectAddress = "gnb9%x2ppp7"
#*.gnb8.x2App[8].client.connectAddress = "gnb10%x2ppp7"

*.gnb9.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb9.x2App[1].client.connectAddress = "gnb2%x2ppp1"
*.gnb9.x2App[2].client.connectAddress = "gnb3%x2ppp2"
*.gnb9.x2App[3].client.connectAddress = "gnb4%x2ppp3"
*.gnb9.x2App[4].client.connectAddress = "gnb5%x2ppp4"
*.gnb9.x2App[5].client.connectAddress = "gnb6%x2ppp5"
*.gnb9.x2App[6].client.connectAddress = "gnb7%x2ppp6"
*.gnb9.x2App[7].client.connectAddress = "gnb8%x2ppp7"
#*.gnb9.x2App[8].client.connectAddress = "gnb10%x2ppp8"

#*.gnb10.x2App[0].client.connectAddress = "gnb1%x2ppp0"
#*.gnb10.x2App[1].client.connectAddress = "gnb2%x2ppp1"
#*.gnb10.x2App[2].client.connectAddress = "gnb3%x2ppp2"
#*.gnb10.x2App[3].client.connectAddress = "gnb4%x2ppp3"
#*.gnb10.x2App[4].client.connectAddress = "gnb5%x2ppp4"
#*.gnb10.x2App[5].client.connectAddress = "gnb6%x2ppp5"
#*.gnb10.x2App[6].client.connectAddress = "gnb7%x2ppp6"
#*.gnb10.x2App[7].client.connectAddress = "gnb8%x2ppp7"
#*.gnb10.x2App[8].client.connectAddress = "gnb9%x2ppp8"


# --------------------------------------------------------# 
# Config "Single-UE-Single-Cell" 
# 
# Simple scenario with one UE attached to one gNB. A remote  
# server sends 800 kbps CBR traffic to the UE 
# 
[Config Single-UE-Single-Cell]
extends = Single-Cell 
description = "Single gNodeB with a one UE"


# gNodeB position 
*.gnb1.mobility.initialX = 500m 
*.gnb1.mobility.initialY = 500m 
*.gnb2.mobility.initialX = 600m
*.gnb2.mobility.initialY = 500m

# UE configuration 
*.numUe = 1 

# UE position (400m far from the gNB)

## static UE
#*.ue[*].mobility.initialX = 500m 
#*.ue[*].mobility.initialY = 900m

## mobile UE
*.ue[*].mobility.typename = "LinearMobility" 
*.ue[*].mobility.initialX = uniform(0m,1000m)
*.ue[*].mobility.initialY = uniform(250m,750m)
*.ue[*].mobility.speed = uniform(3mps,13.89mps) 


# connect the UE's NIC (NR side) to the corresponding serving gNB 
*.ue[*].macCellId = 0 
*.ue[*].masterId = 0 
*.ue[*].nrMacCellId = 1 
*.ue[*].nrMasterId = 1 
 
# Application Setup 
*.ue[*].numApps = 1 
*.server.numApps = 1 
 
*.ue[*].app[*].typename = "CbrReceiver" 
*.ue[*].app[*].localPort = 1000 
 
*.server.app[*].typename = "CbrSender"   
*.server.app[*].PacketSize = 1000      # send 800 Kb/s 
*.server.app[*].sampling_time = 0.01s 
*.server.app[*].destAddress = "ue["+string(ancestorIndex(0))+"]" # obtain the address of the client by reading its index in the array of Apps 
*.server.app[*].destPort = 1000  
*.server.app[*].localPort = 3088+ancestorIndex(0)  
*.server.app[*].startTime = uniform(0.01s,0.05s) 
# --------------------------------------------------------# 

# --------------------------------------------------------# 
# Config "Many-UEs-Single-Cell" 
# 
#   
# 
# 
[Config Many-UEs-Single-Cell]
extends = Single-UE-Single-Cell
description = "Single gNodeB with a 1,5,10,15,20 or 300 UEs"

# variable number of UEs 
*.numUe = ${numUes=1,5,10,15,20,300} 

# UEs position
*.ue[*].mobility.typename = "LinearMobility" 
*.ue[*].mobility.initialX = uniform(0m,1000m)
*.ue[*].mobility.initialY = uniform(250m,750m)
*.ue[*].mobility.speed = uniform(2mps,80mps) 

# the server has one app per client 
*.server.numApps = ${numUes} 

# --------------------------------------------------------# 
# Config "Many-UEs-Multiple-Cell" 
# 
#   
# 
# 
[Config Many-UEs-Multiple-Cell]
extends = Mutliple-Cell
description = "Mutiple gNodeBs with a 1,5,10,30,100,250,300,500,1000,3000,5000,10000 UEs"

############## UE configuration ##################
*.numUe = ${numUEs=1,5,10,30,100,250,300,500,1000,3000,5000,10000}
#*.numUe = 30

#**.ueIdOffset = 0
#**.ueIdOffset = ${repetition}*30
**.ueIdOffset = ${repetition}*${numUEs}

# UEs associates to the best BS at the beginning of the simulation
*.ue[*].macCellId = 0
*.ue[*].masterId = 0
#*.ue[*].nrMacCellId = 1
#*.ue[*].nrMasterId = 1
*.ue[*].nrMacCellId = intuniform(1,9) # randomly allocate the UEs to the NR cells
*.ue[*].nrMasterId = intuniform(1,9)  # randomly allocate the UEs to the NR cells
**.dynamicCellAssociation = true
**.enableHandover = true

############ UEs position #################
*.ue[*].mobility.typename = "LinearMobility"
#*.ue[*].mobility.initialX = uniform(0m,1000m)
#*.ue[*].mobility.initialY = uniform(250m,750m)
*.ue[*].mobility.speed = uniform(1mps,15mps)

#============= Application Setup =============Video
*.ue[*].numApps = 1
# the amount of applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = ${numUEs}

#**.ue[0..].app[*].typename = "UdpVideoStreamClient"
#**.ue[0..].app[*].serverAddress = "server"
#**.ue[0..].app[*].localPort = 9999
#**.ue[0..].app[*].serverPort = 3088
#**.ue[0..].app[*].startTime = uniform(0s, 0.02s)
#
#**.server.app[*].typename = "UdpVideoStreamServer"
#**.server.app[*].videoSize = 200MiB
#**.server.app[*].localPort = 3088+ancestorIndex(0)
#**.server.app[*].sendInterval = ${send = 20ms}
##**.server.app[*].packetLen = ${packetLen = 100B, 200B, 300B, 400B, 500B, 600B, 700B, 800B, 900B, 1KiB, 1.5KiB, 2KiB, 5KiB }
##**.server.app[*].packetLen = ${packetLen = 100B, 300B, 400B}
#**.server.app[*].packetLen = 1500B
#**.mtu = 10000B


*.ue[*].app[*].typename = "CbrReceiver"
*.ue[*].app[*].localPort = 3000

*.server.app[*].typename = "CbrSender"
*.server.app[*].PacketSize = 100
*.server.app[*].sampling_time = 0.02s
*.server.app[*].destAddress = "ue[" + string(ancestorIndex(0)) + "]"
*.server.app[*].destPort = 3000 
*.server.app[*].localPort = 3088+ancestorIndex(0) 
*.server.app[*].startTime = uniform(0s,0.02s)
############# Background traffic configuration (DL only) #################

# the central gNB has a number of background UEs
*.gnb.cellularNic.bgTrafficGenerator[0].numBgUes = ${numBgUEs=1000}

# position of background UEs in the central cell
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(750m,1250m)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)

# --- Background UEs in the central cell --- #
*.gnb.cellularNic.bgTrafficGenerator[0].enablePeriodicCqiUpdate = true
*.gnb.cellularNic.bgTrafficGenerator[0].useProbabilisticCqi = ${probCqi=true}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeDl = uniform(0s,5s)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeUl = uniform(0s,5s)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeDl = 1000B
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeUl = 1000B
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodDl = 0.01s
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodUl = 0.01s

